<?xml version="1.0" encoding="UTF-8" ?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:rop="http://www.rop.com/schema/rop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
       http://www.rop.com/schema/rop http://www.rop.com/schema/rop/rop-1.0.xsd
    http://www.springframework.org/schema/context
    http://www.springframework.org/schema/context/spring-context-3.1.xsd">
    
  <!--   <context:property-placeholder location="classpath*:conf.properties"/> -->

	<!-- 将多个配置文件位置放到列表中-->
	<bean id="propertyResources" class="java.util.ArrayList">
		<constructor-arg>
			<list>
				<value>file:${global.config.path}/conf.properties</value>
			</list>
		</constructor-arg>
	</bean> 
	
	<!-- 将配置文件读取到容器中，交给Spring管理 -->
	<bean 
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations" ref="propertyResources" />
	</bean>
	

    <!--① 扫描Spring Bean-->
    <context:component-scan base-package="me.ele.logan.web"/>

    <!-- 启动Rop框架 -->
    <rop:annotation-driven
        id="router"
        session-manager="sampleSessionManager"
        app-secret-manager="appSecretManager"
        service-access-controller="serviceAccessController"
        formatting-conversion-service="conversionService"
        ext-error-base-names="i18n/rop/sampleRopError,i18n/rop/sampleRopError1"
        service-timeout-seconds="0"
        invoke-times-controller="invokeTimesController"
        upload-file-max-size="10"
        upload-file-types="png,gif"
        core-pool-size="200"
        max-pool-size="500"
        queue-capacity="50"
        keep-alive-seconds="300"
        sign-enable="true"/>

    <bean id="sampleSessionManager" class="me.ele.logan.web.SampleSessionManager" />
    <bean id="invokeTimesController" class="me.ele.logan.web.LoganInvokeTimesController"/>

    <bean id="appSecretManager" class="me.ele.logan.web.LoganAppSecretManager"/>

    <bean id="serviceAccessController" class="me.ele.logan.web.LoganServiceAccessController"/>

    <!--设置自定义的类型转换服务，注册自定义的类型转换器-->
    <bean id="conversionService"
          class="org.springframework.format.support.FormattingConversionServiceFactoryBean">
        <property name="converters">
            <set>
                <!--将xxxx-yyyyyyy格式的电话转换为内部的Telephone对象-->
                <bean class="me.ele.logan.web.converter.TelephoneConverter"/>
                <bean class="me.ele.logan.web.converter.DateConverter"/>
            </set>
        </property>
    </bean>

<!--     注册拦截器，可配置多个 -->
<!--     <rop:interceptors> -->
<!--         <bean class="me.ele.logan.web.ReservedUserNameInterceptor"/> -->
<!--     </rop:interceptors> -->

    <!--注册监听器，可配置多具-->
    <rop:listeners>
<!--         <bean class="me.ele.logan.web.SamplePostInitializeEventListener"/> -->
<!--         <bean class="me.ele.logan.web.SamplePreDoServiceEventListener"/> -->
        <bean class="me.ele.logan.web.BusinessLogAfterDoServiceEventListener"/>
        <bean class="me.ele.logan.web.LoganLogAfterDoServiceEventListener"/>
    </rop:listeners>

    <import resource="spring/applicationContext-datasource.xml" />
	<import resource="spring/applicationContext-dao.xml" />
	<import resource="spring/applicationContext-tx.xml" />
   	<import resource="classpath*:spring/applicationContext-restTemplate.xml" />
	<import resource="classpath*:spring/applicationContext-redis.xml" />
</beans>